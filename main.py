import os
import requests
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    CommandHandler,
    MessageHandler,
    filters
)

TELEGRAM_BOT_TOKEN = os.getenv("7960455014:AAGPnZhaZHt238vqCtOQS610NPRdF_3fn9g")
HF_TOKEN = os.getenv("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")

API_URL = "https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.1"
HEADERS = {"Authorization": f"Bearer {HF_TOKEN}"}

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Hugging Face
def query(payload):
    response = requests.post(API_URL, headers=HEADERS, json=payload)
    return response.json()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–°–æ–ª–¥–∞—Ç, –ò–ò –Ω–∞ —Å–≤—è–∑–∏. –í—ã–∑–æ–≤–∏ –º–µ–Ω—è —Å–ª–æ–≤–æ–º '–ò–ò' –∏ –¥–æ–ª–æ–∂–∏ –∑–∞–¥–∞—á—É.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text.strip()

    if "–∏–∏" not in user_message.lower():
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Å—ë, –∫—Ä–æ–º–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å "–∏–∏"

    await update.message.reply_text("üì° –ü—Ä–∏–Ω—è–ª –≤—ã–∑–æ–≤. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")

    prompt = (
        f"–ò–ò-–∫–æ–º–∞–Ω–¥–∏—Ä"
        f"... "
        f"–°–æ–æ–±—â–µ–Ω–∏–µ: {user_message}"
    )

    response = query({
        "inputs": prompt,
        "parameters": {"max_new_tokens": 100}
    })

    try:
        full_text = response[0]["generated_text"]
        reply = full_text.split(user_message, 1)[-1].strip()
    except:
        reply = "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ü–æ–≤—Ç–æ—Ä–∏ –≤—ã–∑–æ–≤, —Å–æ–ª–¥–∞—Ç."

    await update.message.reply_text(reply)

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    app = ApplicationBuilder().token("7960455014:AAGPnZhaZHt238vqCtOQS610NPRdF_3fn9g").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("ü™ñ –ò–ò-–±–æ–µ—Ü –Ω–∞ —Å–≤—è–∑–∏.")
    app.run_polling()
