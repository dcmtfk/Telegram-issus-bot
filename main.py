import os
import openai
import threading
from flask import Flask
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    CommandHandler,
    MessageHandler,
    filters
)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
TELEGRAM_BOT_TOKEN = os.getenv("7960455014:AAGPnZhaZHt238vqCtOQS610NPRdF_3fn9g")
OPENAI_API_KEY = os.getenv("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")
PORT = int(os.environ.get("PORT", 8080))

openai.api_key = OPENAI_API_KEY

# Telegram –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ò–ò-–∫–æ–º–∞–Ω–¥–∏—Ä –ø–æ–¥–∫–ª—é—á—ë–Ω. –í—ã–∑–æ–≤–∏ –º–µ–Ω—è —Å–ª–æ–≤–æ–º '–ò–ò'.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.text:
        return

    user_message = update.message.text.strip()

    if "–∏–∏" not in user_message.lower():
        return

    await update.message.reply_text("üì° –ü—Ä–∏—ë–º. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã ‚Äî –ò–ò-–∫–æ–º–∞–Ω–¥–∏—Ä –≤ –≤–æ–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ. –û—Ç–≤–µ—á–∞–π —Å—Ç—Ä–æ–≥–æ, –ø–æ-—Ä—É—Å—Å–∫–∏, –∫—Ä–∞—Ç–∫–æ."},
                {"role": "user", "content": user_message}
            ],
            max_tokens=150
        )
        reply = response.choices[0].message.content.strip()
        await update.message.reply_text(reply)

    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å —Ç–æ–∫–µ–Ω OpenAI.")
        print("–û—à–∏–±–∫–∞:", e)

# –ó–∞–ø—É—Å–∫–∞–µ–º Telegram polling –≤ –ø–æ—Ç–æ–∫–µ
def run_telegram_bot():
    app = ApplicationBuilder().token("7960455014:AAGPnZhaZHt238vqCtOQS610NPRdF_3fn9g").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("ü™ñ Telegram –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω.")
    app.run_polling()

# Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
web_app = Flask(__name__)

@web_app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (–ò–ò –æ–Ω–ª–∞–π–Ω ü™ñ)"

if __name__ == '__main__':
    telegram_thread = threading.Thread(target=run_telegram_bot)
    telegram_thread.start()
    web_app.run(host="0.0.0.0", port=PORT)
