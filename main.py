import os
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters,
)
from openai import OpenAI

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª—é—á–µ–π
openai_client = OpenAI(api_key=os.getenv("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"))
TELEGRAM_BOT_TOKEN = os.getenv("7960455014:AAGPnZhaZHt238vqCtOQS610NPRdF_3fn9g")

# –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é
def get_main_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")],
        [InlineKeyboardButton("üìú –ü–æ–º–æ—â—å", callback_data="help")],
        [InlineKeyboardButton("üõë –í—ã–∫–ª—é—á–∏—Ç—å", callback_data="shutdown")],
    ])

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ü™ñ –°–æ–ª–¥–∞—Ç –ò–ò –Ω–∞ —Å–≤—è–∑–∏. –û–∂–∏–¥–∞—é –ø—Ä–∏–∫–∞–∑–æ–≤.",
        reply_markup=get_main_menu()
    )

# –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏—è –≤ –º–µ–Ω—é
async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "settings":
        await query.edit_message_text("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã.")
    elif query.data == "help":
        await query.edit_message_text("‚ÑπÔ∏è –ü—Ä–æ—Å—Ç–æ —É–ø–æ–º—è–Ω–∏ '–ò–ò' –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –∏ —è –æ—Ç–≤–µ—á—É.")
    elif query.data == "shutdown":
        await query.edit_message_text("üí§ –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–ª—É–∂–±—É.")
        await context.application.stop()

# –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    if "–∏–∏" in user_message.lower():
        await update.message.chat.send_action(action="typing")
        completion = openai_client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã ‚Äî –ò–ò –≤ —Å—Ç–∏–ª–µ –≤–æ–µ–Ω–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞, –≥–æ–≤–æ—Ä–∏—à—å —Å—Ç—Ä–æ–≥–æ, –∫–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É."},
                {"role": "user", "content": user_message}
            ]
        )
        response_text = completion.choices[0].message.content
        await update.message.reply_text(f"ü™ñ –ò–ò –¥–æ–∫–ª–∞–¥—ã–≤–∞–µ—Ç:\n{response_text}")

# –ó–∞–ø—É—Å–∫
def main():
    app = ApplicationBuilder().token("7960455014:AAGPnZhaZHt238vqCtOQS610NPRdF_3fn9g").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(menu_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
